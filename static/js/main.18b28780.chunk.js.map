{"version":3,"sources":["services/companies.service.js","components/CompaniesTable.js","services/counterparties.service.js","components/CounterpartiesTable.js","components/FlexDirection.js","components/BuySell.js","services/logs.service.js","components/Logs.js","components/Graph.js","services/exchanges.service.js","pages/Main.js","App.js","serviceWorker.js","theme/theme.js","index.js"],"names":["gCompanies","require","circleIcon","icon","faDotCircle","useStyles","makeStyles","theme","table","minWidth","tableHead","backgroundColor","palette","primary","main","tableBody","dark","tableCell","fontSize","color","active","canceled","dateCell","filter","marginLeft","border","maxHeight","filterRemove","rows","DenseTable","classes","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","TableCell","colSpan","map","Button","key","variant","TableBody","row","company","product","sentAt","status","companiesService","forEach","d","push","gCounterparties","overflow","whiteSpace","counterParty","btc","eth","xpr","eur","usd","gbp","netExposure","lastCalculated","counterpartiesService","tags","margin","tag","padding","flex","box","FlexDirection","props","tag1","tag2","tag3","style","width","Box","display","justifyContent","flexDirection","p","m","exchangeIcon","faExchangeAlt","sendIcon","faPaperPlane","grid","marginTop","marginBottom","height","gridHeader","paddingLeft","gridMain","textAlign","maxWidth","sell","sellIcon","marginRight","transform","buy","buyIcon","rate","BuySell","exchange","Grid","container","spacing","item","xs","currencies","sellPrice","buyPrice","gLogs","TabPanel","children","value","index","other","Typography","role","hidden","id","aria-labelledby","a11yProps","header","position","tabs","tab","fontWeight","typography","fontWeightMedium","indicator","top","logs","renderRow","data","strStart","date","env","strEnd","message","statusColor","colorUpdate","ListItem","button","ListItemText","Fragment","toUpperCase","Logs","useTheme","React","useState","setValue","AppBar","Tabs","onChange","event","newValue","indicatorColor","Tab","label","axis","direction","onChangeIndex","dir","itemSize","itemCount","length","logsService","argument","chart","chartInfo","root","Graph","valueField","argumentField","gExchanges","background","secondary","gridItem","overflowX","paper","text","success","light","exchanges","exchangesService","Main","md","zeroMinWidth","sm","App","Boolean","window","location","hostname","match","createMuiTheme","blueGrey","grey","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.18b28780.chunk.js","sourcesContent":["let gCompanies = require('../data/companies.json');\r\n\r\nconst query = () => {\r\n    return gCompanies;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\n\r\n// @material-ui/core components\r\nimport { Table, TableHead, TableRow, TableBody, TableCell, TableContainer, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Font awesome icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDotCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\n// Services\r\nimport companiesService from '../services/companies.service';\r\n\r\nconst circleIcon = <FontAwesomeIcon icon={faDotCircle} />\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 480,\r\n    },\r\n    tableHead: {\r\n        backgroundColor: theme.palette.primary.main,\r\n\r\n    },\r\n    tableBody: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    tableCell: {\r\n        fontSize: '10px',\r\n        color: '#cdd3d8',\r\n    },\r\n    active: {\r\n        color: '#1dd120'\r\n    },\r\n    canceled: {\r\n        color: '#e81b37'\r\n    },\r\n    dateCell: {\r\n        color: '#a4a5a7',\r\n        fontSize: '10px',\r\n    },\r\n    filter: {\r\n        color: '#a4a5a7',\r\n        fontSize: '10px',\r\n        backgroundColor: 'inherit',\r\n        marginLeft: '5px',\r\n        border: '1px solid #a4a5a7',\r\n        maxHeight: '18px',\r\n    },\r\n    filterRemove: {\r\n        marginLeft: '10px'\r\n    }\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(company, product, sentAt, status) {\r\n    return { company, product, sentAt, status };\r\n}\r\n\r\n\r\nfunction getRows() {\r\n    const data = companiesService.query();\r\n    data.forEach(d => {\r\n        rows.push(createData(d.company, d.product, d.sentAt, d.status));\r\n    });\r\n    return rows;\r\n}\r\n\r\ngetRows();\r\n\r\nexport default function DenseTable() {\r\n    const classes = useStyles();\r\n    const filters = ['Filter 1', 'Filter 2', 'Filter 3'];\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead className={classes.tableHead}>\r\n                    <TableRow><TableCell colSpan={4} className={classes.tableCell}>FILTER APPLIED:\r\n                        {filters.map(filter => {\r\n                        return <Button key={filter} size=\"small\" variant=\"contained\" className={classes.filter}>\r\n                            {filter}\r\n                            <span className={classes.filterRemove}>x</span>\r\n                        </Button>\r\n                    })}\r\n                    </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableCell}>COMPANY NAME</TableCell>\r\n                        <TableCell className={classes.tableCell}>PRODUCT</TableCell>\r\n                        <TableCell className={classes.tableCell}>SENT AT</TableCell>\r\n                        <TableCell className={classes.tableCell}>STATUS</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.company}>\r\n                            <TableCell className={classes.tableCell}>{row.company}</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.product}</TableCell>\r\n                            <TableCell className={classes.dateCell}>{row.sentAt}</TableCell>\r\n                            <TableCell color={(row.status) ? 'green' : 'red'} className={classes.tableCell}>\r\n                                {(row.status) ? <span className={classes.active}> {circleIcon} Active</span> : <span className={classes.canceled}> {circleIcon} Canceled</span>}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","let gCounterparties = require('../data/counterparties.json');\r\n\r\nconst query = () => {\r\n    return gCounterparties;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\n\r\n// @material-ui/core components\r\nimport { Table, TableHead, TableRow, TableBody, TableCell, TableContainer } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Services\r\nimport counterpartiesService from '../services/counterparties.service';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        overflow: 'hidden'\r\n    },\r\n    tableHead: {\r\n        backgroundColor: theme.palette.primary.main,\r\n\r\n    },\r\n    tableBody: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    tableCell: {\r\n        fontSize: '10px',\r\n        color: '#cdd3d8',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    dateCell: {\r\n        color: '#a4a5a7',\r\n        fontSize: '10px',\r\n    }\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(counterParty, btc, eth, xpr, eur, usd, gbp, netExposure, lastCalculated) {\r\n    return { counterParty, btc, eth, xpr, eur, usd, gbp, netExposure, lastCalculated };\r\n}\r\n\r\n\r\nfunction getRows() {\r\n    const data = counterpartiesService.query();\r\n    data.forEach(d => {\r\n        rows.push(createData(d.counterParty, d.btc, d.eth, d.xpr, d.eur, d.usd, d.gbp, d.netExposure, d.lastCalculated));\r\n    });\r\n    return rows;\r\n}\r\n\r\ngetRows();\r\n\r\nexport default function DenseTable() {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead className={classes.tableHead}>\r\n                    <TableRow><TableCell colSpan={9} className={classes.tableCell}>THRESHOLD 10000</TableCell></TableRow>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableCell}>COUNTERPARTY</TableCell>\r\n                        <TableCell className={classes.tableCell}>BTC</TableCell>\r\n                        <TableCell className={classes.tableCell}>ETH</TableCell>\r\n                        <TableCell className={classes.tableCell}>XPR</TableCell>\r\n                        <TableCell className={classes.tableCell}>EUR</TableCell>\r\n                        <TableCell className={classes.tableCell}>USD</TableCell>\r\n                        <TableCell className={classes.tableCell}>GBP</TableCell>\r\n                        <TableCell className={classes.tableCell}>NET EXPOSURE</TableCell>\r\n                        <TableCell className={classes.tableCell} >LAST CALCULATED DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.counterParty}>\r\n                            <TableCell className={classes.tableCell}>{row.counterParty}1</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.btc}2</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.eth}3</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.xpr}4</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.eur}5</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.usd}6</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.gbp}7</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.netExposure}8</TableCell>\r\n                            <TableCell className={classes.dateCell}>{row.lastCalculated}9</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tags: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        margin: 1,\r\n        maxHeight: '40px'\r\n    },\r\n    tag: {\r\n        border: '1px solid #2F3B4B',\r\n        padding: 2,\r\n        flex: 1\r\n    },\r\n    box: {\r\n        margin: 0,\r\n        padding: 0,\r\n    }\r\n\r\n}));\r\n\r\nexport default function FlexDirection(props) {\r\n    const classes = useStyles();\r\n\r\n    const { tag1, tag2, tag3 } = props;\r\n\r\n    return (\r\n        <div style={{ width: '100%' }} className={classes.tags}>\r\n            <Box className={classes.box} display=\"flex\" justifyContent=\"space-between\" flexDirection=\"row\" p={1} m={1}>\r\n                <Box p={1} className={classes.tag}>\r\n                    {tag1}\r\n                </Box>\r\n                <Box p={1} className={classes.tag}>\r\n                    {tag2}\r\n                </Box>\r\n                <Box p={1} className={classes.tag}>\r\n                    {tag3}\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Font awesome icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPaperPlane } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport FlexDirection from './FlexDirection';\r\n\r\nconst exchangeIcon = <FontAwesomeIcon icon={faExchangeAlt} />\r\nconst sendIcon = <FontAwesomeIcon icon={faPaperPlane} />\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        marginTop: 1,\r\n        marginBottom: 15,\r\n        height: '45%',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: '#cdd3d8'\r\n    },\r\n    gridHeader: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        paddingLeft: 10,\r\n    },\r\n    gridMain: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        paddingLeft: 10,\r\n        textAlign: 'center',\r\n        maxWidth: '90%'\r\n\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    sell: {\r\n        backgroundColor: '#e81b37',\r\n        display: 'flex',\r\n        color: '#cdd3d8'\r\n    },\r\n    sellIcon: {\r\n        fontSize: 'x-large',\r\n        marginRight: 5,\r\n        transform: 'rotate(-60deg)'\r\n    },\r\n    buy: {\r\n        backgroundColor: '#1dd120',\r\n        display: 'flex',\r\n        color: '#cdd3d8'\r\n    },\r\n    buyIcon: {\r\n        fontSize: 'x-large',\r\n        marginRight: 5,\r\n        transform: 'rotate(120deg)'\r\n    },\r\n    rate: {\r\n        textAlign: 'center'\r\n    },\r\n    tag: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        border: '1px solid #2F3B4B',\r\n        margin: 1,\r\n        minWidth: '100px'\r\n    }\r\n}));\r\n\r\nconst BuySell = (props) => {\r\n    const classes = useStyles();\r\n    const { exchange } = props;\r\n\r\n    return (\r\n        <Grid container spacing={1} className={classes.grid}>\r\n            <Grid item xs={12} className={classes.gridHeader}>\r\n                {exchangeIcon} {exchange.currencies}\r\n            </Grid>\r\n            <Grid container spacing={1} className={classes.gridMain}>\r\n                <Grid item xs={4}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.sell}><span className={classes.sellIcon}>{sendIcon}</span>\r\n                        <div>\r\n                            {exchange.sellPrice}\r\n                            <div>Sell</div>\r\n                        </div>\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.rate}>\r\n                    {exchange.rate}\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buy}>\r\n                        <span className={classes.buyIcon}>{sendIcon}</span>\r\n                        <div>\r\n                            {exchange.buyPrice}\r\n                            <div>Buy</div>\r\n                        </div>\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.flex}>\r\n                <FlexDirection className={classes.tag} tag1={exchange.tag1} tag2={exchange.tag2} tag3={exchange.tag3}></FlexDirection>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default BuySell;","let gLogs = require('../data/logs.json');\r\n\r\nconst query = () => {\r\n    return gLogs;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Typography, Box, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// Services\r\nimport logsService from '../services/logs.service';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`action-tabpanel-${index}`}\r\n            aria-labelledby={`action-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `action-tab-${index}`,\r\n        'aria-controls': `action-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        position: 'relative',\r\n        color: '#cdd3d8',\r\n        fontSize: '10px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        maxHeight: '20px'\r\n    },\r\n    tabs: {\r\n        width: '100%',\r\n        fontSize: '10px',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: '#cdd3d8',\r\n    },\r\n    tab: {\r\n        color: 'white',\r\n        '&$selected': {\r\n            backgroundColor: '#004C9B',\r\n            color: 'white',\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n        },\r\n    },\r\n    indicator: {\r\n        backgroundColor: '#a4a5a7',\r\n        top: '45px',\r\n    },\r\n    logs: {\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(date, env, status, message) {\r\n    return { date, env, status, message };\r\n}\r\n\r\n\r\nfunction getRows() {\r\n    const data = logsService.query();\r\n    data.forEach(d => {\r\n        rows.push(createData(d.date, d.env, d.status, d.message));\r\n    });\r\n    return rows;\r\n}\r\n\r\ngetRows();\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n    const data = rows[index];\r\n    const strStart = `[${data.date}] ${data.env}. `;\r\n    const strEnd = ` ${data.message}. `;\r\n    let statusColor = colorUpdate(data.status);\r\n\r\n    return (\r\n        <ListItem button style={style} key={index}>\r\n            <ListItemText primary={<React.Fragment>{strStart} <span style={{ color: statusColor }}>{data.status.toUpperCase()}</span>{strEnd}</React.Fragment>} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nfunction colorUpdate(status) {\r\n    switch (status) {\r\n        case 'Info':\r\n            return 'yellow'\r\n        case 'Debug':\r\n            return 'red'\r\n        default:\r\n            break;\r\n    }\r\n\r\n}\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function Logs() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    classes={{\r\n                        indicator: classes.indicator\r\n                    }}\r\n                    className={classes.header}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"action tabs example\"\r\n                >\r\n                    <Tab label=\"Id\" {...a11yProps(0)} />\r\n                    <Tab label=\"Created\" {...a11yProps(1)} />\r\n                    <Tab label=\"Last opened\" {...a11yProps(2)} />\r\n                    <Tab label=\"Instrument\" {...a11yProps(3)} />\r\n                    <Tab label=\"Qty\" {...a11yProps(4)} />\r\n                    <Tab label=\"Bid\" {...a11yProps(5)} />\r\n                    <Tab label=\"Ask\" {...a11yProps(6)} />\r\n                    <Tab label=\"Delta\" {...a11yProps(7)} />\r\n                    <Tab label=\"Model vol\" {...a11yProps(8)} />\r\n                    <Tab label=\"Status\" {...a11yProps(9)} />\r\n                    <Tab label=\"Clearing\" {...a11yProps(10)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n                className={classes.logs}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={6} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={7} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={8} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={9} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={10} dir={theme.direction}>\r\n                    <div className={classes.tabs}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    LineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst data = [\r\n    { argument: 1, value: 20 },\r\n    { argument: 2, value: 33 },\r\n    { argument: 4, value: 30 },\r\n    { argument: 5, value: 40 },\r\n    { argument: 6, value: 45 },\r\n    { argument: 7, value: 30 },\r\n    { argument: 8, value: 35 },\r\n    { argument: 9, value: 38 },\r\n    { argument: 10, value: 40 },\r\n    { argument: 11, value: 47 },\r\n    { argument: 12, value: 48 },\r\n    { argument: 13, value: 39 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chart: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n\r\n        maxHeight: '250px',\r\n        position: 'relative',\r\n        fontSize: '10px',\r\n        color: '#cdd3d8',\r\n\r\n    },\r\n    chartInfo: {\r\n        color: '#cdd3d8',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        fontSize: '10px',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: '#cdd3d8',\r\n    },\r\n}));\r\nexport default function Graph() {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.chartInfo}>\r\n            <Chart className={classes.chart} data={data}>\r\n                <ArgumentAxis className={classes.chartInfo} />\r\n                <ValueAxis className={classes.chartInfo} />\r\n                <LineSeries valueField=\"value\" argumentField=\"argument\" className={classes.chartInfo} />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n}; ","let gExchanges = require('../data/exchanges.json');\r\n\r\nconst query = () => {\r\n    return gExchanges;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Components\r\nimport CompaniesTable from '../components/CompaniesTable';\r\nimport CounterpartiesTable from '../components/CounterpartiesTable';\r\nimport BuySell from '../components/BuySell';\r\nimport Logs from '../components/Logs';\r\nimport Graph from '../components/Graph';\r\n\r\n// Services\r\nimport exchangesService from '../services/exchanges.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        width: '100%',\r\n        margin: '0px',\r\n        background: theme.palette.secondary.dark,\r\n\r\n    },\r\n    gridItem: {\r\n        overflowX: 'hidden'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        background: theme.palette.success.light,\r\n\r\n    }\r\n}));\r\n\r\nconst exchanges = [];\r\n\r\nfunction getExchanges() {\r\n    const data = exchangesService.query();\r\n    data.forEach(d => {\r\n        exchanges.push(d);\r\n    });\r\n    return exchanges;\r\n}\r\n\r\ngetExchanges();\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container spacing={1} className={classes.grid}>\r\n            <Grid item xs={12} md={8} className={classes.gridItem}>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item zeroMinWidth xs={12} sm={6} className={classes.gridItem}>\r\n                        <CompaniesTable />\r\n                    </Grid>\r\n                    <Grid item zeroMinWidth xs={12} sm={6} className={classes.gridItem}>\r\n                        <CompaniesTable />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item zeroMinWidth xs={12} md={8} className={classes.gridItem}>\r\n                        <CounterpartiesTable />\r\n\r\n                    </Grid>\r\n                    <Grid item zeroMinWidth xs={12} md={4} className={classes.gridItem}>\r\n                        {exchanges.map(exchange => {\r\n                            return (<BuySell key={exchange.currencies} exchange={exchange} />);\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} className={classes.gridItem}>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item sm={12} sm={6} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item xs={12} sm={6} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item xs={12} sm={6} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} className={classes.grid}>\r\n\r\n                <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                    <Logs></Logs>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                    <Logs></Logs>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>);\r\n}\r\n\r\nexport default Main;","import React from 'react';\n\n// Pages\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\r\nimport { grey, blueGrey } from '@material-ui/core/colors';\r\n\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blueGrey[700],\r\n            light: blueGrey[200],\r\n            dark: blueGrey[900],\r\n        },\r\n        secondary: {\r\n            main: grey[700],\r\n            light: grey[300],\r\n            dark: grey[900],\r\n        },\r\n\r\n        theme: 'dark'\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { theme } from './theme/theme';\n\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}