{"version":3,"sources":["services/companies.service.js","components/CompaniesTable.js","services/counterparties.service.js","components/CounterpartiesTable.js","components/FlexDirection.js","components/BuySell.js","services/logs.service.js","components/Logs.js","components/Graph.js","services/exchanges.service.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["gCompanies","require","circleIcon","icon","faDotCircle","useStyles","makeStyles","theme","table","minWidth","tableHead","backgroundColor","tableBody","tableCell","fontSize","color","active","canceled","rows","DenseTable","classes","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","TableCell","colSpan","TableBody","map","row","key","company","product","sentAt","status","companiesService","forEach","d","push","gCounterparties","overflow","whiteSpace","counterParty","btc","eth","xpr","eur","usd","gbp","netExposure","lastCalculated","counterpartiesService","tags","margin","maxHeight","tag","border","padding","FlexDirection","props","tag1","tag2","tag3","style","width","Box","display","justifyContent","alignContent","flexDirection","p","m","exchangeIcon","faExchangeAlt","sendIcon","faPaperPlane","grid","marginTop","marginBottom","height","gridHeader","paddingLeft","minHeight","gridMain","flex","sell","sellIcon","marginRight","transform","buy","buyIcon","rate","textAlign","BuySell","exchange","Grid","container","spacing","item","xs","currencies","Button","variant","sellPrice","buyPrice","gLogs","TabPanel","children","value","index","other","Typography","role","hidden","id","aria-labelledby","a11yProps","header","position","root","renderRow","data","ListItem","button","ListItemText","primary","date","env","toUpperCase","message","Logs","useTheme","React","useState","setValue","AppBar","Tabs","onChange","event","newValue","indicatorColor","Tab","label","axis","direction","onChangeIndex","dir","itemSize","itemCount","length","logsService","argument","chart","chartInfo","Graph","valueField","argumentField","gExchanges","background","gridItem","overflowX","paper","palette","text","secondary","success","light","exchanges","exchangesService","Main","md","zeroMinWidth","sm","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a2cf3dfa.chunk.js","sourcesContent":["let gCompanies = require('../data/companies.json');\r\n\r\nconst query = () => {\r\n    return gCompanies;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\n\r\n// @material-ui/core components\r\nimport { Table, TableHead, TableRow, TableBody, TableCell, TableContainer } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Font awesome icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDotCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\n// Services\r\nimport companiesService from '../services/companies.service';\r\n\r\nconst circleIcon = <FontAwesomeIcon icon={faDotCircle} />\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 480,\r\n    },\r\n    tableHead: {\r\n        backgroundColor: '#2F3B4B',\r\n\r\n    },\r\n    tableBody: {\r\n        backgroundColor: '#252C36',\r\n    },\r\n    tableCell: {\r\n        fontSize: '10px',\r\n        color: '#cdd3d8',\r\n    },\r\n    active: {\r\n        color: '#1dd120'\r\n    },\r\n    canceled: {\r\n        color: '#e81b37'\r\n    }\r\n\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(company, product, sentAt, status) {\r\n    return { company, product, sentAt, status };\r\n}\r\n\r\n\r\nfunction getRows() {\r\n    const data = companiesService.query();\r\n    data.forEach(d => {\r\n        rows.push(createData(d.company, d.product, d.sentAt, d.status));\r\n    });\r\n    return rows;\r\n}\r\n\r\ngetRows();\r\n\r\nexport default function DenseTable() {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead className={classes.tableHead}>\r\n                    <TableRow><TableCell colSpan={4} className={classes.tableCell}>FILTER APPLIED:</TableCell></TableRow>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableCell}>COMPANY NAME</TableCell>\r\n                        <TableCell className={classes.tableCell}>PRODUCT</TableCell>\r\n                        <TableCell className={classes.tableCell}>SENT AT</TableCell>\r\n                        <TableCell className={classes.tableCell}>STATUS</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.company}>\r\n                            <TableCell className={classes.tableCell}>{row.company}</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.product}</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.sentAt}</TableCell>\r\n                            <TableCell color={(row.status) ? 'green' : 'red'} className={classes.tableCell}>\r\n                                {(row.status) ? <span className={classes.active}> {circleIcon} Active</span> : <span className={classes.canceled}> {circleIcon} Canceled</span>}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","let gCounterparties = require('../data/counterparties.json');\r\n\r\nconst query = () => {\r\n    return gCounterparties;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\n\r\n// @material-ui/core components\r\nimport { Table, TableHead, TableRow, TableBody, TableCell, TableContainer } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Services\r\nimport counterpartiesService from '../services/counterparties.service';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        overflow: 'hidden'\r\n    },\r\n    tableHead: {\r\n        backgroundColor: '#2F3B4B',\r\n\r\n    },\r\n    tableBody: {\r\n        backgroundColor: '#272E38',\r\n    },\r\n    tableCell: {\r\n        fontSize: '10px',\r\n        color: '#cdd3d8',\r\n        whiteSpace: 'nowrap'\r\n    }\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(counterParty, btc, eth, xpr, eur, usd, gbp, netExposure, lastCalculated) {\r\n    return { counterParty, btc, eth, xpr, eur, usd, gbp, netExposure, lastCalculated };\r\n}\r\n\r\n\r\nfunction getRows() {\r\n    const data = counterpartiesService.query();\r\n    data.forEach(d => {\r\n        rows.push(createData(d.counterParty, d.btc, d.eth, d.xpr, d.eur, d.usd, d.gbp, d.netExposure, d.lastCalculated));\r\n    });\r\n    return rows;\r\n}\r\n\r\ngetRows();\r\n\r\nexport default function DenseTable() {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead className={classes.tableHead}>\r\n                    <TableRow><TableCell colSpan={9} className={classes.tableCell}>THRESHOLD 10000</TableCell></TableRow>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tableCell}>COUNTERPARTY</TableCell>\r\n                        <TableCell className={classes.tableCell}>BTC</TableCell>\r\n                        <TableCell className={classes.tableCell}>ETH</TableCell>\r\n                        <TableCell className={classes.tableCell}>XPR</TableCell>\r\n                        <TableCell className={classes.tableCell}>EUR</TableCell>\r\n                        <TableCell className={classes.tableCell}>USD</TableCell>\r\n                        <TableCell className={classes.tableCell}>GBP</TableCell>\r\n                        <TableCell className={classes.tableCell}>NET EXPOSURE</TableCell>\r\n                        <TableCell className={classes.tableCell} >LAST CALCULATED DATE</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.counterParty}>\r\n                            <TableCell className={classes.tableCell}>{row.counterParty}1</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.btc}2</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.eth}3</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.xpr}4</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.eur}5</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.usd}6</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.gbp}7</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.netExposure}8</TableCell>\r\n                            <TableCell className={classes.tableCell}>{row.lastCalculated}9</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tags: {\r\n        backgroundColor: '#272E38',\r\n        margin: 1,\r\n        maxHeight: '40px'\r\n    },\r\n    tag: {\r\n        border: '1px solid #2F3B4B',\r\n        padding: 2,\r\n    }\r\n\r\n}));\r\n\r\nexport default function FlexDirection(props) {\r\n    const classes = useStyles();\r\n\r\n    const { tag1, tag2, tag3 } = props;\r\n\r\n    return (\r\n        <div style={{ width: '100%' }} className={classes.tags}>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignContent=\"space-between\" flexDirection=\"row\" p={1} m={1}>\r\n                <Box p={1} className={classes.tag}>\r\n                    {tag1}\r\n                </Box>\r\n                <Box p={1} className={classes.tag}>\r\n                    {tag2}\r\n                </Box>\r\n                <Box p={1} className={classes.tag}>\r\n                    {tag3}\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Font awesome icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPaperPlane } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport FlexDirection from './FlexDirection';\r\n\r\nconst exchangeIcon = <FontAwesomeIcon icon={faExchangeAlt} />\r\nconst sendIcon = <FontAwesomeIcon icon={faPaperPlane} />\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        marginTop: 1,\r\n        marginBottom: 15,\r\n        backgroundColor: '#272E38',\r\n        color: '#cdd3d8',\r\n        height: '22vh'\r\n    },\r\n    gridHeader: {\r\n        backgroundColor: '#2F3B4B',\r\n        marginBottom: '-20px',\r\n        paddingLeft: 10,\r\n        minHeight: '50px'\r\n    },\r\n    gridMain: {\r\n        backgroundColor: '#272E38',\r\n        paddingLeft: 10,\r\n    },\r\n    flex: {\r\n        display: 'flex'\r\n    },\r\n    sell: {\r\n        backgroundColor: '#e81b37',\r\n        display: 'flex',\r\n        color: '#cdd3d8'\r\n    },\r\n    sellIcon: {\r\n        fontSize: 'x-large',\r\n        marginRight: 5,\r\n        transform: 'rotate(-60deg)'\r\n    },\r\n    buy: {\r\n        backgroundColor: '#1dd120',\r\n        display: 'flex',\r\n        color: '#cdd3d8'\r\n    },\r\n    buyIcon: {\r\n        fontSize: 'x-large',\r\n        marginRight: 5,\r\n        transform: 'rotate(120deg)'\r\n    },\r\n    rate: {\r\n        textAlign: 'center'\r\n    },\r\n    tag: {\r\n        backgroundColor: '#272E38',\r\n        border: '1px solid #2F3B4B',\r\n        margin: 1,\r\n        minWidth: '100px'\r\n    }\r\n}));\r\n\r\nconst BuySell = (props) => {\r\n    const classes = useStyles();\r\n    const { exchange } = props;\r\n\r\n    return (\r\n        <Grid container spacing={1} className={classes.grid}>\r\n            <Grid item xs={12} className={classes.gridHeader}>\r\n                {exchangeIcon} {exchange.currencies}\r\n            </Grid>\r\n            <Grid container spacing={1} className={classes.gridMain}>\r\n                <Grid item xs={4}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.sell}><span className={classes.sellIcon}>{sendIcon}</span>\r\n                        <div>\r\n                            {exchange.sellPrice}\r\n                            <div>Sell</div>\r\n                        </div>\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.rate}>\r\n                    {exchange.rate}\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                    <Button size=\"small\" variant=\"contained\" className={classes.buy}>\r\n                        <span className={classes.buyIcon}>{sendIcon}</span>\r\n                        <div>\r\n                            {exchange.buyPrice}\r\n                            <div>Buy</div>\r\n                        </div>\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.flex}>\r\n                <FlexDirection className={classes.tag} tag1={exchange.tag1} tag2={exchange.tag2} tag3={exchange.tag3}></FlexDirection>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default BuySell;","let gLogs = require('../data/logs.json');\r\n\r\nconst query = () => {\r\n    return gLogs;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Typography, Box, ListItem, ListItemText } from '@material-ui/core';\r\n\r\n// Services\r\nimport logsService from '../services/logs.service';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`action-tabpanel-${index}`}\r\n            aria-labelledby={`action-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `action-tab-${index}`,\r\n        'aria-controls': `action-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        position: 'relative',\r\n        color: '#cdd3d8',\r\n        fontSize: '10px',\r\n        backgroundColor: '#2F3B4B',\r\n        // marginBottom: '-20px',\r\n        // paddingLeft: 10,\r\n        maxHeight: '20px'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        fontSize: '10px',\r\n        backgroundColor: '#272E38',\r\n        color: '#cdd3d8',\r\n    },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(date, env, status, message) {\r\n    return { date, env, status, message };\r\n}\r\n\r\n\r\nfunction getRows() {\r\n    const data = logsService.query();\r\n    data.forEach(d => {\r\n        rows.push(createData(d.date, d.env, d.status, d.message));\r\n    });\r\n    return rows;\r\n}\r\n\r\ngetRows();\r\n\r\nfunction renderRow(props) {\r\n    const { index, style } = props;\r\n    const data = rows[index];\r\n    return (\r\n        <ListItem button style={style} key={index}>\r\n            <ListItemText primary={`[${data.date}] ${data.env}. ${data.status.toUpperCase()}: ${data.message}`} />\r\n        </ListItem>\r\n    );\r\n}\r\nrenderRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    style: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function Logs() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    className={classes.header}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"action tabs example\"\r\n                >\r\n                    <Tab label=\"Id\" {...a11yProps(0)} />\r\n                    <Tab label=\"Created\" {...a11yProps(1)} />\r\n                    <Tab label=\"Last opened\" {...a11yProps(2)} />\r\n                    <Tab label=\"Instrument\" {...a11yProps(3)} />\r\n                    <Tab label=\"Qty\" {...a11yProps(4)} />\r\n                    <Tab label=\"Bid\" {...a11yProps(5)} />\r\n                    <Tab label=\"Ask\" {...a11yProps(6)} />\r\n                    <Tab label=\"Delta\" {...a11yProps(7)} />\r\n                    <Tab label=\"Model vol\" {...a11yProps(8)} />\r\n                    <Tab label=\"Status\" {...a11yProps(9)} />\r\n                    <Tab label=\"Clearing\" {...a11yProps(10)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <div className={classes.root}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <div className={classes.root}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    <div className={classes.root}>\r\n                        <FixedSizeList height={400} itemSize={26} itemCount={rows.length}>\r\n                            {renderRow}\r\n                        </FixedSizeList>\r\n                    </div>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    LineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst data = [\r\n    { argument: 1, value: 20 },\r\n    { argument: 2, value: 33 },\r\n    { argument: 4, value: 30 },\r\n    { argument: 5, value: 40 },\r\n    { argument: 6, value: 45 },\r\n    { argument: 7, value: 30 },\r\n    { argument: 8, value: 35 },\r\n    { argument: 9, value: 38 },\r\n    { argument: 10, value: 40 },\r\n    { argument: 11, value: 47 },\r\n    { argument: 12, value: 48 },\r\n    { argument: 13, value: 39 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chart: {\r\n        backgroundColor: '#272E38',\r\n        maxHeight: '200px',\r\n        position: 'relative',\r\n        fontSize: '10px',\r\n    },\r\n    chartInfo: {\r\n\r\n        color: '#cdd3d8',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        fontSize: '10px',\r\n        backgroundColor: '#272E38',\r\n        color: '#cdd3d8',\r\n    },\r\n}));\r\nexport default function Graph() {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.chartInfo}>\r\n            <Chart className={classes.chart} data={data}>\r\n                <ArgumentAxis className={classes.chartInfo} />\r\n                <ValueAxis className={classes.chartInfo} />\r\n                <LineSeries valueField=\"value\" argumentField=\"argument\" className={classes.chartInfo} />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n\r\n}; ","let gExchanges = require('../data/exchanges.json');\r\n\r\nconst query = () => {\r\n    return gExchanges;\r\n}\r\n\r\nexport default {\r\n    query\r\n}","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Components\r\nimport CompaniesTable from '../components/CompaniesTable';\r\nimport CounterpartiesTable from '../components/CounterpartiesTable';\r\nimport BuySell from '../components/BuySell';\r\nimport Logs from '../components/Logs';\r\nimport Graph from '../components/Graph';\r\n\r\n// Services\r\nimport exchangesService from '../services/exchanges.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        width: '100%',\r\n        margin: '0px',\r\n        background: '#152235',\r\n\r\n    },\r\n    gridItem: {\r\n        overflowX: 'hidden'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        background: theme.palette.success.light,\r\n\r\n    }\r\n}));\r\n\r\nconst exchanges = [];\r\n\r\nfunction getExchanges() {\r\n    const data = exchangesService.query();\r\n    data.forEach(d => {\r\n        exchanges.push(d);\r\n    });\r\n    return exchanges;\r\n}\r\n\r\ngetExchanges();\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container spacing={1} className={classes.grid}>\r\n            <Grid item xs={12} md={8} className={classes.gridItem}>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item zeroMinWidth xs={12} sm={6} className={classes.gridItem}>\r\n                        <CompaniesTable />\r\n                    </Grid>\r\n                    <Grid item zeroMinWidth xs={12} sm={6} className={classes.gridItem}>\r\n                        <CompaniesTable />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item zeroMinWidth xs={12} md={8} className={classes.gridItem}>\r\n                        <CounterpartiesTable />\r\n\r\n                    </Grid>\r\n                    <Grid item zeroMinWidth xs={12} md={4} className={classes.gridItem}>\r\n                        {exchanges.map(exchange => {\r\n                            return (<BuySell key={exchange.currencies} exchange={exchange} />);\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={4} className={classes.gridItem}>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} className={classes.grid}>\r\n                    <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                        <Graph />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} className={classes.grid}>\r\n\r\n                <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                    <Logs></Logs>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} className={classes.gridItem}>\r\n                    <Logs></Logs>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>);\r\n}\r\n\r\nexport default Main;","import React from 'react';\n\n// Pages\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}